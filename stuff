.  require 'date'
.libs date

.  require_relative 'gemhelper'
.  require_relative "lib/runecms"
.relative gemhelper lib/runecms

.name  runecms RuneCMS

.initial rm -f *.gem
.summary Simple static website manager

. desc defaults to summary
.desc
A simple static website manager based on Livetext (and Ruby)
.end

. defaults to config?
.authors
Hal Fulton
.end

. defaults to config
.email rubyhacker@gmail.com

.dirs bin lib examples test
.extra ./README.lt3 ./README.md runecms.gemspec
. files = dirs/* + extra


. Maybe regenerate based on contents of bin?
.bin rcms

.homepage ;ldskf;sdlfksdf

. default to config?
.license

.post_install

  Success! For help, run 'rcms' with no parameters.

.end

.deps
  sd;pfjwepfj
.end

.deps dev
 s;dlfksdf
.end

.deps test
 ;sdlfksdf
.end

.   s.version = RuneCMS::VERSION
.   s.date        = Date.today.strftime("%Y-%m-%d")

.  Gem::Specification.new do |s|
.    system("rm -f *.gem")
.    s.name        = 'runecms'
.    s.version     = RuneCMS::VERSION
.    s.date        = Date.today.strftime("%Y-%m-%d")
.    s.summary     = "Simple static website manager"
.    s.description = "A simple static website manager based on Livetext (and Ruby)"
.    s.authors     = ["Hal Fulton"]
.    s.email       = 'rubyhacker@gmail.com'
.    s.executables << "rcms"
.    
.    # Files...
.    main = GemHelper.file_trees("bin", "lib", "examples", "test")
.    misc = %w[./README.lt3 ./README.md runecms.gemspec]
.  
.    s.files       =  main + misc
.    s.homepage    = 'https://github.com/Hal9000/runecms'
.    s.license     = "Ruby"
.    s.post_install_message = "\n  Success! For help, run 'rcms' with no parameters.\n "
.  end

.gituser Hal9000
.github  private

.author  Hal Fulton
.email   rubyhacker@gmail.com
.license Ruby

. default ruby version?
. where to find gems for hotfix

.comment
Read global first, then project (overrides)
Comments in gemspec: ruby -v, rvm, bundler, rubygems, ...
REPL for this?
projectist mixin

Utilities:
  - check staleness? README.md, gemspec, Gemfile?, ...
  - edit global config
  - edit project
  - git status
  - git normal checkin
  - bump version
  - rebuild README
  - build gemspec
  - build gem (dep ^^)
  - push gem (dep ^^)
  - hotfix
.end
. from global config:
.   gituser
.   author
.   email



.repo myrepo
.gem  mygem MyClass


